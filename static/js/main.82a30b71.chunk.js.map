{"version":3,"sources":["components/Painting/Painting.module.css","components/PaintingList/PaintingList.module.css","components/Painting/defaultImg.jpg","components/Painting/Painting.js","components/PaintingList/PaintingList.js","App.js","index.js"],"names":["module","exports","Painting","props","imageUrl","url","title","author","price","quantity","className","StylePainting","PaintingTestStyleVariable","src","alt","width","href","tag","type","console","log","PaintingList","items","PaintingListStl","PaintingListStyle","map","item","id","App","paintings","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mHACAA,EAAOC,QAAU,CAAC,OAAS,OAAO,OAAS,MAAM,QAAU,SAAS,WAAa,QAAQ,SAAW,2BAA2B,0BAA4B,8C,wxBCA3JD,EAAOC,QAAU,CAAC,QAAU,8BAA8B,kBAAoB,sE,mICD/D,I,sBC4CAC,MApCf,SAAkBC,GAOEA,EALZC,SADJ,IAEIC,EAIYF,EAJZE,IACAC,EAGYH,EAHZG,MAHJ,EAMgBH,EAFZI,cAJJ,MAIa,gEAJb,EAKIC,EACYL,EADZK,MACAC,EAAYN,EAAZM,SACJ,OAAQ,sBAAKC,UAAWC,IAAcT,SAA9B,UACJ,mBAAGQ,UAAWC,IAAcC,0BAA5B,0JACA,mBAAGF,UAAWC,IAAcC,0BAA5B,wLAEC,qBAAKC,IAAKR,EAAKS,IAAKR,EAAOS,MAAM,QAClC,6BAAKT,IACL,iEACW,mBAAGU,KAAMT,EAAOF,IAAhB,SAAsBE,EAAOU,SAExC,oBAAGP,UAAU,cAAb,uCAAkCF,EAAlC,wDAEC,sGAAmBC,EAAW,GAAK,iFAAkB,6EAArD,OACD,wBAAQS,KAAK,SAAb,oH,gBCvBRC,QAAQC,IAAI,0BAkCGC,MA/Bf,YAAkC,IAAVC,EAAS,EAATA,MACpB,OAEC,cADG,CACH,MAAIZ,UAAWa,IAAgBC,kBAA/B,UACO,mBAAGd,UAAU,cAAb,wLACA,mBAAGA,UAAU,cAAb,iPACCY,EAAMG,KAAI,SAAAC,GAAI,OACX,6BACK,cAAC,EAAD,CACGrB,IAAKqB,EAAKrB,IACVC,MAAOoB,EAAKpB,MACZC,OAAQmB,EAAKnB,OACbC,MAAOkB,EAAKlB,MACZC,SAAUiB,EAAKjB,YANdiB,EAAKC,W,MCyBfC,MARd,WACG,OACI,8BACI,cAAC,EAAD,CAAcN,MAAOO,OCbjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.82a30b71.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainFs\":\"25px\",\"mainFw\":\"900\",\"mainFst\":\"italic\",\"greenColor\":\"green\",\"Painting\":\"Painting_Painting__BQhCW\",\"PaintingTestStyleVariable\":\"Painting_PaintingTestStyleVariable__3Jau1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flex_rw\":\"PaintingList_flex_rw__tdkvi\",\"PaintingListStyle\":\"PaintingList_PaintingListStyle__4_OcQ PaintingList_flex_rw__tdkvi\"};","export default __webpack_public_path__ + \"static/media/defaultImg.5fbb361a.jpg\";","\r\nimport defaultImage from './defaultImg.jpg';\r\nimport StylePainting  from './Painting.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n//  Это пример react-компонента. По факту это функция, котрая возвращает нам разметку (родительский тег)\r\n//  Не забывать везде закрывать теги (даже одинарные). Имена  react-компонентов ОБЯЗАТЕЛЬНО писать с БОЛЬШОЙ буквы. \r\n//  Иначе  jsx  не воспримеет её как переменную, а решит что это просто строка с тегом. Ничего не будет рендерится.\r\nfunction Painting(props) {\r\n    const {\r\n        imageUrl = defaultImage, //так прописывается путь к дефолтной картинке\r\n        url,\r\n        title,\r\n        author = 'не известно',\r\n        price,\r\n        quantity} = props;\r\n    return (<div className={StylePainting.Painting}>\r\n        <b className={StylePainting.PaintingTestStyleVariable}> Component: Painting.js (Тестируем применение</b>\r\n        <b className={StylePainting.PaintingTestStyleVariable}>переменной css в подульных  css-файлах) </b>\r\n        {/* <img src={imageUrl} alt={title} width=\"480\" /> */}\r\n         <img src={url} alt={title} width=\"480\" />\r\n        <h2>{title}</h2>\r\n        <p>\r\n            Автор: <a href={author.url}>{author.tag}</a>\r\n        </p>\r\n        <p className=\"TitleBorder\">Цена: {price}  кредитов</p>   \r\n        {/* Пример рендеринга по условию */}\r\n         <p>Доступность:  { quantity < 10 ? 'заканчивается' : 'есть в наличии' } </p>\r\n        <button type=\"button\">Добавить в корзину</button>\r\n    </div >\r\n    );\r\n}\r\n\r\n// Выше импортируем библиотеку с проверкой типов  prop-types, а ниже пример использования\r\n// если вместо цифры, например, в цене передать не число, а строку, то в консоле будет предупреждение об ошибке\r\nPainting.propTypes = {\r\n    imageUrl: PropTypes.string,\r\n    url: PropTypes.string,\r\n    title: PropTypes.string,\r\n    author: PropTypes.string,\r\n    price: PropTypes.number,\r\n    quantity:PropTypes.number\r\n}\r\n\r\nexport default Painting","import Painting from '../Painting/Painting'\r\nimport PropTypes from 'prop-types';\r\nimport PaintingListStl from './PaintingList.module.css'\r\n\r\n\r\nconsole.log(\"PaintingList.js works!\");\r\n// это аналог шаблона разметки для одной карточки. Аргументом получает массив с \r\n//карточками от файла  json. Данніе одной карточки пропускаються циклом map через шаблон и получаем коллекцию карточек\r\nfunction PaintingList({ items }) {\r\n    return (\r\n        // <ul className={PaintingListStl.PaintingListStyle}>\r\n     <ul className={PaintingListStl.PaintingListStyle}>\r\n            <p className=\"TitleBorder\">Это тест глобальной переменной css,</p>\r\n            <p className=\"TitleBorder\"> которая описана аж в далёком модульном Painting.module.css   </p>\r\n            {items.map(item => (\r\n                <li key={item.id}>\r\n                     <Painting\r\n                        url={item.url}\r\n                        title={item.title}\r\n                        author={item.author}\r\n                        price={item.price}\r\n                        quantity={item.quantity}\r\n                    />\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\n\r\n//Строка  id: PropTypes.string.isRequired в данном компоненте проверяет является ли полученный айдишник строкой\r\n// остальные props были проверены в компоненте Painting\r\nPaintingList.propTypes = {\r\n    items: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n    }) )\r\n    \r\n}\r\n \r\nexport default PaintingList;","// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n////////////////// ===================== React . Занятие 2  =========================\n\nimport paintings from './paintings.json'; // импортируем json-файл с данными (для примера динаммического изменения данных)\nimport PaintingList from './components/PaintingList/PaintingList'\nimport './App.css';\n\n function App() {\n    return (\n        <dev>\n            <PaintingList items={paintings} />\n        </dev>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n// import reportWebVitals from './reportWebVitals';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\n////////////////// ===================== React . Занятие 2  =========================\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}